import random
def build_board(dims):
    return [['O' for count in range(dims)] for count in range(dims)] 
build_board(4) 
[['O', 'O', 'O', 'O'],
 ['O', 'O', 'O', 'O'],
 ['O', 'O', 'O', 'O'],
 ['O', 'O', 'O', 'O']]
def print_board(board):
    for b in board:
        print(*b)
board = build_board(4)
print_board(board)
def build_ship(dims):
    # Длина корабля - это случайное число между 2 и длиной борта
    len_ship = random.randint(2, dims)
    orientation = random.randint(0, 1)
    # Корабль горизонтален, если ориентация равна 0, и вертикальна, если ориентация равна 1
    if orientation == 0:
       # Произвольно выбрать строку и создать список выбранной строки * длина корабля
        row_ship = [random.randint(0, dims - 1)] * len_ship
       # Произвольно выбрать столбец первой позиции корабля (отсюда вычитание длины корабля)
        col = random.randint(0, dims - len_ship)
        # Создать список значений столбцов
        col_ship = list(range(col, col + len_ship))
        # Создать позиционные значения из списков строк и столбцов
        coords = tuple(zip(row_ship, col_ship))
    else:
        # То же, что и выше, за исключением переключения столбца и строки
        col_ship = [random.randint(0, dims - 1)] * len_ship
        row = random.randint(0, dims - len_ship)
        row_ship = list(range(row, row + len_ship))
        coords = tuple(zip(row_ship, col_ship))
    return list(coords)
ship = build_ship(4); ship 
[(1, 1), (2, 1), (3, 1)]

def user_guess():
    # Вычтите 1, чтобы настроить индексацию на основе Python 0
    row = int(input('Row: ')) - 1
    col = int(input('Col: ')) - 1
    return (row, col)
def update_board(guess, board, ship, guesses):
    if guess in guesses:
        print('You already guessed that, silly!')
        return board
    guesses.append(guess)
    if guess in ship:
        print('You hit my battleship!')
        # Обновить доску с помощью «X», обозначающего попадание
        board[guess[0]][guess[1]] = 'X'
# Удалить это значение из координат корабля; полезно для цикла while в main()
        ship.remove(guess)
        return board
    print('oooh, miss!')
    return board
guesses = [] 
our_guess = user_guess()
board = update_board(our_guess, board, ship, guesses)
print_board(board)

def welcome_message():
    print('Welcome to Battleship!')
    print('There is a battleship hidden in this board. Enter your row and column guesses to sink it!')
welcome_message()

def main():
    welcome_message()
    board = build_board(5)
    ship = build_ship(5)
    guesses = []
    while len(ship) > 0:
        board = update_board(user_guess(), board, ship, guesses)
        print_board(board)
    print('You sunk my battleship!')
    return main()
